services:
  postgres:
    image: postgres
    container_name: mypostgres
    ports:
      - 5433:5432
    networks:
      - mynetwork
    env_file:
      - back-end/.env
    volumes:
      - myvolume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -q -d postgres -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  backend:
    image: mybackend
    container_name: mybackend
    build:
      context: ./back-end
      dockerfile: Dockerfile
    ports:
      - 5000:5000
    networks:
      - mynetwork
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - back-end/.env
  frontend:
    image: myfrontend
    build: front-end/
    container_name: myfrontend
    ports:
      - 80:80
    networks:
      - mynetwork
    depends_on:
      - backend
  pgadmin:
    container_name: mypgadmin
    image: dpage/pgadmin4
    ports:
      - 15432:5432
    networks:
      - mynetwork
    environment:
      - PGADMIN_DEFAULT_EMAIL=teste@teste.com.br
      - PGADMIN_DEFAULT_PASSWORD=postgres

networks:
  mynetwork:
    name: mynetwork

volumes:
  myvolume: